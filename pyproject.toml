[project]
name = 'sonyci'
description = 'A Sony Ci api client'
authors = [{ name = 'WGBH-MLA', email = 'ryan_harbert@wgbh.org' }]
dependencies = [
    "pydantic~=2.6",
    "requests-oauth2client~=1.5",
    "loguru~=0.7",
]
requires-python = '>=3.8'
readme = 'README.md'
license = { text = 'MIT' }
dynamic = ['version']

[project.scripts]
ci = 'sonyci.__main__:app'

[project.optional-dependencies]
test = [
    "pytest~=8.1",
    "vcrpy~=6.0",
    "pytest-vcr~=1.0",
    "pytest-cov~=4.1",
    "pytest-sugar~=1.0",
    "pytest-xdist~=3.5",
    "urllib3~=1.26",
]
cli = [
    "typer[all]~=0.9",
]
cli-ci = [
    "typer~=0.9",
]
tui = [
    "trogon~=0.5",
]
docs = [
    "mkdocs~=1.5",
    "mkdocs-material~=9.5",
    "mkdocs-git-revision-date-localized-plugin~=1.2",
    "mike~=2.0",
    "mkdocstrings[python]~=0.24",
    "mkdocs-jupyter~=0.24",
]

[build-system]
requires = ['pdm-backend']
build-backend = 'pdm.backend'

[tool.pdm]
version = { source = 'file', path = 'sonyci/_version.py' }

[tool.pdm.dev-dependencies]
dev = [
    "ruff~=0.3",
    "black~=24.3",
    "pre-commit~=3.5",
]

[tool.pytest.ini_options]
testpaths = ['tests']
markers = ['no_ci: marks tests to skip on CI']

[tool.coverage.run]
omit = ['tests/*']

[tool.ruff.flake8-quotes]
inline-quotes = 'single'

[tool.ruff]
select = [
    'B', # flake8-bugbear
    'C4', # flake8-comprehensions
    'C90', # mccabe
    'E', # pycodestyle errors
    'ERA', # eradicate
    'F', # pyflakes
    'I', # isort
    'INT', # flake8-gettext
    'N', # pep8-naming
    'PIE', # flake8-pie,
    'PLC', # pylint - convention
    'PLE', # pylint - error
    'PLW', # pylint - warning
    'Q', # flake8-quotes
    'RET', # flake8-return,
    'RUF', # Ruff-specific rules
    'SIM', # flake8-simplify
    'UP', # pyupgrade
    'W', # pycodestyle warnings

]
ignore = [
    'B008', # Do not perform function call in argument defaults
    'E501', # line too long

]
