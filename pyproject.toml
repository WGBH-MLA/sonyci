[project]
name = "sonyci"
version = "0.0.1"
description = "A Sony Ci api client"
authors = [{ name = "WGBH-MLA", email = "ryan_harbert@wgbh.org" }]
dependencies = ["pydantic>=2.0a3", "requests-oauth2client>=1.1.0"]
requires-python = ">=3.7"
readme = "README.md"
license = { text = "MIT" }
dynamic = ["version"]


[project.optional-dependencies]
test = [
    "pytest>=7.3.1",
    "vcrpy>=4.2.1",
    "pytest-vcr>=1.0.2",
    "pytest-cov>=4.0.0",
    "pytest-sugar>=0.9.7",
    "pytest-xdist>=3.2.1",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = { source = "file", path = "chowda/_version.py" }

[tool.pdm.dev-dependencies]
dev = ["ruff>=0.0.263", "black>=23.3.0"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "E", # pycodestyle errors
    # "ERA", # eradicate
    "F", # pyflakes
    # "I", # isort
    "INT", # flake8-gettext
    "N", # pep8-naming
    "PIE", # flake8-pie,
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "Q", # flake8-quotes
    "RET", # flake8-return,
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W", # pycodestyle warnings

]
