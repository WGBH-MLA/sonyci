[project]
name = "sonyci"
description = "A Sony Ci api client"
authors = [{ name = "WGBH-MLA", email = "ryan_harbert@wgbh.org" }]
dependencies = ["pydantic~=1.10", "requests-oauth2client~=1.1", "loguru~=0.7"]
requires-python = ">=3.7"
readme = "README.md"
license = { text = "MIT" }
dynamic = ["version"]

[project.scripts]
ci = "sonyci.__main__:app"

[project.optional-dependencies]
test = [
    "pytest~=7.4",
    "vcrpy~=4.4",
    "pytest-vcr~=1.0",
    "pytest-cov~=4.1",
    "pytest-sugar~=0.9",
    "pytest-xdist~=3.3",
    "urllib3~=1.26",
]
cli = [
    "typer[all]~=0.9",
]
cli-ci = ["typer>=0.9.0"]
docs = [
    "mkdocs~=1.4",
    "mkdocs-material~=9.1",
    "mkdocs-git-revision-date-localized-plugin~=1.2",
    "mike~=1.1",
    "mkdocstrings[python]~=0.22",
    "mkdocs-jupyter~=0.24",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = { source = "file", path = "sonyci/_version.py" }

[tool.pdm.dev-dependencies]
dev = [
    "ruff~=0.0",
    "black~=23.3",
    "pre-commit~=2.21",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = ["no_ci: marks tests to skip on CI"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "E", # pycodestyle errors
    "ERA", # eradicate
    "F", # pyflakes
    # "I", # isort
    "INT", # flake8-gettext
    "N", # pep8-naming
    "PIE", # flake8-pie,
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "Q", # flake8-quotes
    "RET", # flake8-return,
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W", # pycodestyle warnings

]
ignore = [
    "B008", # Do not perform function call in argument defaults
    "E501", # line too long

]
